*luckypunch0		pickup 0 else 0blocked?
			drop 
			goto luckypunch
*0blocked?		sense0
			ifall sense_celltype!=island sense_celltype!=enemy sense_shiptype!=enemy sense ship_shiptype!=friend else alterDir
*alterDir		flipzero 2 else down
			flipzero 2 else doubleup
*luckypunch5		pickup 5 else 5blocked?
			drop 
			goto luckypunch5
5blocked?		sense 5 
			ifall sense_celltype!=island sense_celltype!=enemy sense_shiptype!=enemy sense ship_shiptype!=friend else alterDir
			goto initoneleft
*doubleup		pickup 4 else 4blocked?
			drop 
			goto doubleup
*4blocked?		sense 4
			ifall sense_celltype!=island sense_celltype!=enemy sense_shiptype!=enemy sense ship_shiptype!=friend else alterDir
			turn left
*initoneleft		turn left
			goto routine
*down			flipzero 2 else doubledown
*luckypunch1		pickup 1 else 1blocked?
			drop 
			goto luckypunch1
*1blocked?		sense 1
			ifall sense_celltype!=island sense_celltype!=enemy sense_shiptype!=enemy sense ship_shiptype!=friend else alterDir
			goto initoneright
*doubledown		pickup 2 else 2blocked?
			drop 
			goto doubleup
*2blocked?		sense 2
                	ifall sense_celltype!=island sense_celltype!=enemy sense_shiptype!=enemy sense ship_shiptype!=friend else alterDir
			turn right
*initoneright		turn right 
			goto routine 	
*routine		sense 6
			flipzero 2 else deepSeaInit					; deepSea <> longRange := single turn l||r
			goto shortRangeInit						; shortRange := (doppel turn) l||r	
*deepSeaInit		move else friendOrFoe						; move 1
			flipzero 3 else	DSleft						; wuerfeln: rechts, links oder geradeaus
			flipzero 2 else DSright						
			goto DSahead
*DSahead		ifall ship_direction!=5 ship_direction!=4 else deepSeaLongAheadInit ; fate: LongAhead, (s||l)Left, (s||l)Right
			goto deepSeaShortAheadInit					; fate: shortAhead, longLeft, longRight
*DSleft			turn left							; wenn er von links kommt, nur rechts abbiegen
			ifall ship_direction!=5 ship_direction!=4 else deepSeaLongAheadInit ; fate: longAhead, (s||l)Right
			goto deepSeaShortLeftInit					; fate: shortAhead, longRight
*DSright		turn right							; wenn er von rechts kommt nur links abbiegen
			ifall ship_direction!=5 ship_direction!=4 else deepSeaLongAheadInit ; fate: longAhead, (s||l)Left, 
			goto deepSeaShortRightInit					; fate: shortAhead, longLeft
*deepSeaShortAhead	if shipcondition>1 else return0
			sense 0 
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m1dSsA
			goto pickA1
*m1dSsA			move else m1dSsA						; move 1 else still 0
			pickup 1 else s41A
			goto return0
*s41A			pickup 5 else deepSeaShortAheadInit
			goto return0
*deepSeaShortAheadInit	sense 0 
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m2dSsA
			goto pickA2
*m2dSsA			move else DSSAmarkR1						; move 2 else still 1
			pickup 1 else s42A						; goto sense deepsea short ahead 4(s42A)
			goto turn1
*s42A			pickup 5 else m3dSsA						; goto move deepsea short ahead 3(m3dSsA)
			goto turn1
*m3dSsA			sense 0 
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m3dSsA2		
			goto pickA3		
*m3dSsA2		move else DSSAmarkR2						; move 3 else still 2
			pickup 1 else s43A						; wenn man schonmal da ist, kann man auch gleich
			goto turn2							; rechts und links nach schaetzen schauen
*s43A			pickup 5 else m4dSsA
			goto turn2
*m4dSsA			sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m4dSsA2		
			goto pickA4		
*m4dSsA2		move else DSSAmarkR3						; move 4 else still 3
			pickup 1 else s44A
			goto turn3
*s44A			pickup 5 else m5dSsA
			goto turn3
*m5dSsA			sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m5dSsA2		
			goto pickA5		
*m5dSsA2		move else DSSAmarkR4						; move 5 else still 4
			pickup 1 else s45A
			goto turn4
*s45A			pickup 5 else m6dSsA
			goto turn4
*m6dSsA			sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m6dSsA2		
			goto pickA6		
*m6dSsA2		move else DSSAmarkR5						; move 6 else still 5
			pickup 1 else s46A
			goto turn5
*s46A			pickup 5 else m7dSsA
			goto turn5
*m7dSsA		 	sense 0	
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m7dSsA2
			goto pickA7		
*m7dSsA2	 	move else DSSAmarkR6 						; move 7 else still 6
			goto pickA8			
*s47AA			pickup 1 else s47A
			goto turn6
*s47A			pickup 5 else DSSAmarkR7
			goto turn6
*DSSAmarkR5		mark 5								; markiere range 5
*DSSAmarkR1		mark 3								; markiere range 1
			goto fzdSsA
*DSSAmarkR3		mark 3								; markiere range 3
*DSSAmarkR2		mark 4								; markiere range 2
			goto fzdSsA
*DSSAmarkR7		mark 3								; markiere range 7 (3+4+5)
*DSSAmarkR6		mark 4								; markiere range 6
*DSSAmarkR4		mark 5								; markiere range 4	
*fzdSsA			sense 6								; leaving deepSeaShortAhead
			ifall !sense_marker2 !sense_marker3 !sense_marker4 !sense_marker5 else fastChoiceSA
			if ship_direction==5 else dir4A
			mark 2
			mark 1
			goto DSAdirEQ5
*dir4A			mark 1
			goto DSAdirEQ4
*fastChoiceSA		if ship_direction==5 else DSAdirEQ4
*DSAdirEQ5		flipzero 2 else deepSeaShortLeft		; falls false new dir==4, deshalb nochmal die kurze routine.
			goto deepSeaLongRight
*DSAdirEQ4		flipzero 2 else deepSeaLongLeft
			goto deepSeaShortRight				; falls true new dir==5
*pickA1			pickup 0 else fzdSsA				; wenns nicht weitergeht und kein Schatz gefunden, werden Richtung
			goto return0
*pickA2			pickup 0 else DSSAmarkR1			; und Entfernung markiert, dann wird weitergesucht
			goto turn1
*pickA3			pickup 0 else DSSAmarkR2
			goto turn2
*pickA4			pickup 0 else DSSAmarkR3
			goto turn3
*pickA5			pickup 0 else DSSAmarkR4
			goto turn4
*pickA6			pickup 0 else DSSAmarkR5
			goto turn5
*pickA7			pickup 0 else DSSAmarkR6
			goto turn6
*pickA8			pickup 0 else s47AA
			goto turn7
*deepSeaShortLeft	if ship_condition>1 else return0	
			sense 0			
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m1dSsLL
			goto pickL1L
*m1dSsLL		move else m1dSsLL
			pickup 1 else s41LL
			goto return0
*s41L			pickup 5 else deepSeaShortLeftInitL
			goto return0
*deepSeaShortLeftInitL	sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m2dSsLL
			goto pickL2L
*m2dSsLL		move else DSSLmarkR1L						; move 2 else still 1
			pickup 1 else s42LL						; goto sense deepsea short ahead 4(s42A)
			goto turn1
*s42LL			pickup 5 else m3dSsLL						; goto move deepsea short ahead 3(m3dSsA)
			goto turn1
*m3dSsLL		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m3dSsLL2
			goto pickL3L
*m3dSsLL2		move else DSSLmarkR2L						; move 3 else still 2
			pickup 1 else s43LL						; wenn man schonmal da ist, kann man auch gleich
			goto turn2							; rechts und links nach schaetzen schauen
*s43LL			pickup 5 else m4dSsLL
			goto turn2
*m4dSsLL		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m4dSsLL2
			goto pickL4L
*m4dSsLL2		move else DSSLmarkR3L						; move 4 else still 3
			pickup 1 else s44LL
			goto turn3
*s44LL			pickup 5 else m5dSsLL
			goto turn3
*m5dSsLL		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m5dSsLL2
			goto pickL5L
*m5dSsLL2		move else DSSLmarkR4L						; move 5 else still 4
			pickup 1 else s45LL
			goto turn4
*s45LL			pickup 5 else m6dSsLL
			goto turn4
*m6dSsLL		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m6dSsLL2
			goto pickL6L
*m6dSsLL2		move else DSSLmarkR5L						; move 6 else still 5
			pickup 1 else s46LL
			goto turn5
*s46LL			pickup 5 else m7dSsLL
			goto turn5
*m7dSsLL		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m7dSsLL2
			goto pickL7L
*m7dSsLL2		move else DSSLmarkR6L 						; move 7 else still 6
			goto pickL8L
*s47LLL			pickup 1 else s47LL
			goto turn6
*s47LL			pickup 5 else DSSLmarkR7L
			goto turn6
*DSSLmarkR5L		mark 5								; markiere range 5
*DSSLmarkR1L		mark 3								; markiere range 1
			goto fzdSsLL
*DSSLmarkR3L		mark 3								; markiere range 3
*DSSLmarkR2L		mark 4								; markiere range 2
			goto fzdSsLL
*DSSLmarkR7L		mark 3								; markiere range 7 (3+4+5)
*DSSLmarkR6L		mark 4								; markiere range 6
*DSSLmarkR4L		mark 5								; markiere range 4	
*fzdSsLL		sense 6								; leaving DeepSeaShortLeft
			ifall !sense_marker2 !sense_marker3 !sense_marker4 !sense_marker5 else fastChoiceSL
			if ship_direction==5 else dir4L
			mark 2
			mark 1
			goto DSLdirEQ5
*dir4L			mark 1
			goto DSLdirEQ4
*fastChoiceSL		if ship_direction==5 else DSLdirEQ4
*DSLdirEQ5		goto deepSeaLongRight 				; new dir==0
*DSLdirEQ4		goto deepSeaShortRight				; new dir==5
			goto deepSea
*pickL1L		pickup 0 else fzdSsLL
			goto return0
*pickL2L		pickup 0 else DSSLmarkR1L
			goto turn1
*pickL3L		pickup 0 else DSSLmarkR2L
			goto turn2
*pickL4L		pickup 0 else DSSLmarkR3L
			goto turn3
*pickL5L		pickup 0 else DSSLmarkR4L
			goto turn4
*pickL6L		pickup 0 else DSSLmarkR5L
			goto turn5
*pickL7L		pickup 0 else DSSLmarkR6L
			goto turn6
*pickL8L		pickup 0 else s47LLL
			goto turn7
*deepSeaShortRight 	if ship_condition>1 else return0
			turn right							; begin deepSeaShortRight
			sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m1dSsR
			goto pickR1		
*m1dSsR			move else m1dSsR
			pickup 1 else s41R
			goto return0
*s41R			pickup 5 else deepSeaShortRightInit
			goto return0
*deepSeaShortRightInit	sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m2dSsR
			goto pickR2		
*m2dSsR			move else DSSRmarkR1						; move 2 else still 1
			pickup 1 else s42R						; goto sense deepsea short ahead 4(s42A)
			goto turn1
*s42R			pickup 5 else m3dSsR						; goto move deepsea short ahead 3(m3dSsA)
			goto turn1
*m3dSsR			sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m3dSsR2
			goto pickR3
*m3dSsR2		move else DSSRmarkR2						; move 3 else still 2
			pickup 1 else s43R						; wenn man schonmal da ist, kann man auch gleich
			goto turn2							; rechts und links nach schaetzen schauen
*s43R			pickup 5 else m4dSsR
			goto turn2
*m4dSsR			sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m4dSsR2
			goto pickR4
*m4dSsR2		move else DSSRmarkR3						; move 4 else still 3
			pickup 1 else s44L
			goto turn3
*s44R			pickup 5 else m5dSsR
			goto turn3
*m5dSsR			sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m5dSsR2
			goto pickR5
*m5dSsR2		move else DSSRmarkR4						; move 5 else still 4
			pickup 1 else s45R
			goto turn4
*s45R			pickup 5 else m6dSsR
			goto turn4
*m6dSsR			sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m6dSsR2
			goto pickR6
*m6dSsR2		move else DSSRmarkR5						; move 6 else still 5
			pickup 1 else s46R
			goto turn5
*s46R			pickup 5 else m7dSsR
			goto turn5
*m7dSsR			sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m7dSsR2
			goto pickR7
*m7dSsR2	 	move else DSSRmarkR6						; move 7 else still 6
			goto pickR8		
*s47RR			pickup 1 else s47R
			goto turn6
*s47R			pickup 5 else DSSRmarkR7
			goto turn6
*DSSRmarkR5		mark 5								; markiere range 5
*DSSRmarkR1		mark 3								; markiere range 1
			goto fzdSsR
*DSSRmarkR3		mark 3								; markiere range 3
*DSSRmarkR2		mark 4								; markiere range 2
			goto fzdSsR
*DSSRmarkR7		mark 3								; markiere range 7 (3+4+5)
*DSSRmarkR6		mark 4								; markiere range 6
*DSSRmarkR4		mark 5								; markiere range 4	
*fzdSsR			sense 6								; leaving deepSeaShortRight
			ifall !sense_marker2 !sense_marker3 !sense_marker4 !sense_marker5 else fastChoiceSR
			if ship_direction==5 else DSRdirEQ4
			mark 2
			mark 1
			goto DSRdirEQ5							; DSRdirEQ5 := DeepSeaShort current dir == 5
*dir4R			mark 1
			goto DSRdirEQ4
*fastChoiceSR		if ship_direction==5 else DSRdirEQ4
			goto DSRdirEQ5
*DSRdirEQ4		goto deepSeaLongLeft 						; new dir==3, 
*DSRdirEQ5		goto deepSeaShortLeft				; kein turn right:das waere insgesamt ein doppelturn right und 											fuer den Fall gibt es die shortRange Routine
*pickR1			pickup 0 else fzdSsR
			goto return0
*pickR2			pickup 0 else DSSRmarkR1
			goto turn1
*pickR3			pickup 0 else DSSRmarkR2
			goto turn2
*pickR4			pickup 0 else DSSRmarkR3
			goto turn3
*pickR5			pickup 0 else DSSRmarkR4
			goto turn4			; Legende: mx3994 nachdem ich jetzt für geschaetzt jede vierte Zeile neue labels und Befehle einfuegen durfte, weil die herren der meinung waren, dass "dagegen fahren" kein gutes Mittel ist, um herauszufinden ob eine Insel im Weg ist oder nicht, habe ich darauf verzichtet die kuerzel zu erlaeutern, damit die herrschaften eine idee davon bekommen, wieviel spass es macht in einem 1000zeilen langen assemblercode artigem taktik file alle x<10 Zeilen minimale, aber fundamentale aenderungen vorzunehmen, die die ganze taktik scheitern lassen koennen. HF!
*pickR6			pickup 0 else DSSRmarkR5
			goto turn5
*pickR7			pickup 0 else DSSRmarkR6
			goto turn6
*pickR8			pickup 0 else s47RR
			goto turn7
*deepSeaLongAhead	if ship_condition>1 else return0			; begin DeepSeaLongAhead
			sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m1dSaA
			goto pickL0aA
*m1dSaA			move else m1dSaA					; move 1 else still 0
			pickup 1 else s31aAA
			goto return0
*s31aAA			pickup 5 else deepSeaLongAheadInit
			goto return0
*deepSeaLongAheadInit	sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m2dSaA
			goto pickL1aA
*m2dSaA			move else DSSAmarkR1					; move 2 else still 1
			pickup 1 else s32aAA					; goto sense deepsea short ahead 4(s42A)
			goto turn1
*s32aAA			pickup 5 else m3dSaA					; goto move deepsea short ahead 3(m3dSsA)
			goto turn1
*m3dSaA			sense0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m3dSaA2
			goto pickL2aA
*m3dSaA2		move else DSSAmarkR2					; move 3 else still 2
			pickup 1 else s33aAA					; wenn man schonmal da ist, kann man auch gleich
			goto turn2						; rechts und links nach schaetzen schauen
*s33aAA			pickup 5 else m4dSlaA
			goto turn2
*m4dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m4dSlaA2
			goto pickL3aA
*m4dSlaA2		move else DSSAmarkR3					; move 4 else still 3
			pickup 1 else s34aAA
			goto turn3
*s34aAA			pickup 5 else m5dSlaA
			goto turn3
*m5dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m5dSlaA2
			goto pickL4aA
*m5dSlaA2		move else DSSAmarkR4					; move 5 else still 4
			pickup 1 else s35aAA
			goto turn4
*s35aAA			pickup 5 else m6dSlaA
			goto turn4
*m6dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m6dSlaA2
			goto pickL5aA
*m6dSlaA2		move else DSSAmarkR5					; move 6 else still 5
			pickup 1 else s36aAA
			goto turn5
*s36aAA			pickup 5 else m7dSlaA
			goto turn5
*m7dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m7dSlaA2
			goto pickL6aA
*m7dSlaA2		move else DSSAmarkR6					; move 7 else still 6
			pickup 1 else s37aAA
			goto turn6
*s37aAA			pickup 5 else m8dSlaA
			goto turn6
*m8dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m8dSlaA2
			goto pickL7aA
*m8dSlaA2		move else DSSAmarkR7					; move 8 else still 7
			pickup 1 else s38aAA
			goto turn7
*s38aAA			pickup 5 else m9dSlaA
			goto turn7
*m9dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m9dSlaA2
			goto pickL8aA
*m9dSlaA2		move else DSSAmarkR8					; move 9 else still 8
			pickup 1 else s39aAA
			goto turn8
*s39aAA			pickup 5 else m10dSlaA
			goto turn8
*m10dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m10dSlaA2
			goto pickL9aA
*m10dSlaA2		move else DSSAmarkR9					; move 10 else still 9
			pickup 1 else s40aAA
			goto turn9
*s40aAA			pickup 5 else m11dSlaA
			goto turn9
*m11dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m11dSlaA2
			goto pickL10aA
*m11dSlaA2		move else DSSAmarkR10					; move 11 else still 10
			pickup 1 else s41aAA
			goto turn10
*s41aAA			pickup 5 else m12dSlaA
			goto turn10
*m12dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m12dSlaA2
			goto pickL11aA
*m12dSlaA2		move else DSSAmarkR11					; move 12 else still 11
			pickup 1 else s42aAA
			goto turn11
*s42aAA			pickup 5 else m13dSlaA
			goto turn11
*m13dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m13dSlaA2
			goto pickL12aA
*m13dSlaA2		move else DSSAmarkR12					; move 13 else still 12
			pickup 1 else s43aAA
			goto turn12
*s43aAA			pickup 5 else m14dSlaA
			goto turn12
*m14dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m14dSlaA2
			goto pickL13aA
*m14dSlaA2		move else DSSAmarkR13					; move 14 else still 13
			pickup 1 else s44aAA
			goto turn13
*s44aAA			pickup 5 else m15dSlaA
			goto turn13
*m15dSlaA		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m15dSlaA2
			goto pickL14aA
*m15dSlaA2		move else DSSAmarkR14 					; move 15 else still 14
			goto pickL15aA			
*s445aAA		pickup 1 else s45aAA
			goto turn14
*s45aAA			pickup 5 else DSSAmarkR15
			goto turn14
*DSSAmarkR7		mark 4							; markiere range 7
*DSSAmarkR3		mark 3							; markiere range 3
*DSSAmarkR1		mark 2							; markiere range 1
			goto fzdSlaA 								
*DSSAmarkR5		mark 4
			mark 2							; markiere range 5			
			goto fzdSlaA
*DSSAmarkR6		mark 3							; markiere range 6
*DSSAmarkR4		mark 4							; markiere range 4
			goto
*DSSAmarkR13		mark 4							; markiere range 13
*DSSAmarkR9		mark 5							; markiere range 9
			mark 2				 
			goto fzdSlaA
*DSSAmarkR11		mark 2							; markiere range 11
*DSSAmarkR10		mark 5							; markiere range 10
*DSSAmarkR2		mark 3							; markiere range 2
			goto fzdSlaA				
*DSSAmarkR15		mark 2							; markiere range 15
*DSSAmarkR14		mark 3							; markiere range 14
*DSSAmarkR12		mark 4							; markiere range 12
*DSSAmarkR8		mark 5							; markiere range 8	
*fzdSlaA		sense 6							; leaving DeepSeaLongAhead
			ifall !sense_marker3 !sense_marker4 !sense_marker5 !sense_marker2 else fastChoiceAA
			if ship_direction>2 else AALT3
			mark 0
			goto AArightEQ4
*AALT3			if ship_direction<2 else AAEQ2
			if ship_direction<1 else AAEQ1
			mark 3
			goto AAleftEQ5
*AAEQ1			mark 4
			goto tripleLong
*AAEQ2			mark 5
			goto triplelong
fastChoiceAA		if ship_direction!=3 else AArightEQ4
			if ship_direction!=0 else AAleftEQ5
			goto tripleLong
*AAleftEQ5		flipzero 2 else deepSeaShortLeft
			goto deepSeaLongRight
*AArightEQ4		flipzero 2 else deepSeaLongLeft
			goto deepSeaShortRight
*tripleLong		flipzero 2 else deepSeaLongLeft
			goto deepSeaLongRight
*pickL0aA		pickup 0 else fzdSlaA
			goto return0
*pickL1aA		pickup 0 else DSSAmarkR1
			goto turn1
*pickL2aA		pickup 0 else DSSAmarkR2
			goto turn2
*pickL3aA		pickup 0 else DSSAmarkR3
			goto turn3
*pickL4aA		pickup 0 else DSSAmarkR4
			goto turn4
*pickL5aA		pickup 0 else DSSAmarkR5
			goto turn5
*pickL6aA		pickup 0 else DSSAmarkR6
			goto turn6
*pickL7aA		pickup 0 else DSSAmarkR7
			goto turn7
*pickL8aA		pickup 0 else DSSAmarkR8
			goto turn8
*pickL9aA		pickup 0 else DSSAmarkR9
			goto turn9
*pickL10aA  		pickup 0 else DSSAmarkR10
			goto turn10
*pickL11aA		pickup 0 else DSSAmarkR11
			goto turn11
*pickL12aA		pickup 0 else DSSAmarkR12
			goto turn12
*pickL13aA		pickup 0 else DSSAmarkR13
			goto turn13
*pickL14aA		pickup 0 else DSSAmarkR14
			goto turn14
*pickL15aA		pickup 0 else s445aAA
			goto turn15
*deepSeaLongLeft	if ship_condition!=1 else return0			; begin deepSeaLongLeft
			turn left
			sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m1dSlRRR
			goto pickL0RRR	
*m1dSlRRR		move else m1dSlRRR					; move 1 else still 0
			pickup 1 else s31RRR
			goto return0
*s31RRR			pickup 5 else deepSeaLongLeftInit
			goto return0
*deepSeaLongLeftInit	sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m2dSlRRR
			goto pickL1RRR	
*m2dSlRRR		move else DSSRRmarkR1					; move 2 else still 1
			pickup 1 else s32RRR					; goto sense deepsea short ahead 4(s42A)
			goto turn1
*s32RRR			pickup 5 else m3dSlRRR					; goto move deepsea short ahead 3(m3dSsA)
			goto turn1
*m3dSlRRR		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m3dSlRRR2
			goto pickL2RRR	
*m3dSlRRR2		move else DSSRRmarkR2					; move 3 else still 2
			pickup 1 else s33RRR					; wenn man schonmal da ist, kann man auch gleich
			goto turn2						; rechts und links nach schaetzen schauen
*s33RRR			pickup 5 else m4dSlRRR
			goto turn2
*m4dSlRRR		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m4dSlRRR2
			goto pickL3RRR				
*m4dSlRRR2		move else DSSRRmarkR3					; move 4 else still 3
			pickup 1 else s34RRR
			goto turn3
*s34RRR			pickup 5 else m5dSlRRR
			goto turn3
*m5dSlRRR		sense 0	
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m5dSlRRR2
			goto pickL4RRR				
*m5dSlRRR2		move else DSSRRmarkR4					; move 5 else still 4
			pickup 1 else s35RRR
			goto turn4
*s35RRR			pickup 5 else m6dSlRRR
			goto turn4
*m6dSlRRR		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m6dSlRRR2
			goto pickL5RRR
*m6dSlRRR2		move else DSSRRmarkR5					; move 6 else still 5
			pickup 1 else s36RRR
			goto turn5
*s36RRR			pickup 5 else m7dSlRRR
			goto turn5
*m7dSlRRR		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m7dSlRRR2
			goto pickL6RRR
*m7dSlRRR2		move else DSSRRmarkR6					; move 7 else still 6
			pickup 1 else s37RRR
			goto turn6
*s37RRR			pickup 5 else m8dSlRRR
			goto turn6
*m8dSlRRR		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m8dSlRRR2
			goto pickL7RRR
*m8dSlRRR2		move else DSSRRmarkR7					; move 8 else still 7
			pickup 1 else s38RRR
			goto turn7
*s38RRR			pickup 5 else m9dSlRRR
			goto turn7
*m9dSlRRR		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m9dSlRRR2
			goto pickL8RRR
*m9dSlRRR2		move else DSSRRmarkR8					; move 9 else still 8
			pickup 1 else s39RRR
			goto turn8
*s39RRR			pickup 5 else m10dSlRRR
			goto turn8
*m10dSlRRR		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m10dSlRRR2
			goto pickL9RRR
*m10dSlRRR		move else DSSRRmarkR9					; move 10 else still 9
			pickup 1 else s40RRR
			goto turn9
*s40RRR			pickup 5 else *m11dSlRRR
			goto turn9
*m11dSlRRR		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m11dSlRRR2
			goto pickL10RRR
*m11dSlRRR2		move else DSSRRmarkR10					; move 11 else still 10
			pickup 1 else s41RRR
			goto turn10
*s41RRR			pickup 5 else *m12dSlRRR
			goto turn10
*m12dSlRRR		sense 0
			ifany sense_celltype==island sense_celltype==enemyhome sense_shiptype==enemy else m12dSlRRR2
			goto pickL11RRR
*m12dSlRRR2		move else DSSRRmarkR11					; move 12 else still 11
			pickup 1 else s42RRR
			goto turn11
*s42RRR			pickup 5 else m13dSlRRR
			goto turn11
*m13dSlRRR		


			move else pickL12RRR					; move 13 else still 12
			pickup 1 else s43RRR
			goto turn12
*s43RRR			pickup 5 else m14dSlRRR
			goto turn12
*m14dSlRRR		


			move else pickL13RRR					; move 14 else still 13
			pickup 1 else s44RRR
			goto turn13
*s44RRR			pickup 5 else m15dSlRRR
			goto turn13
*m15dSlRRR		


			move else pickL14RRR 					; move 15 else still 14
			goto pickL15RRR			
*s445RRR		pickup 1 else s45RRR
			goto turn14
*s45RRR			pickup 5 else DSSRmarkRR15
			goto turn14
*DSSRRmarkR7		mark 4							; markiere range 7
*DSSRRmarkR3		mark 3							; markiere range 3
*DSSRRmarkR1		mark 2							; markiere range 1
			goto fzdSlRRR 								
*DSSRRmarkR5		mark 4
			mark 2							; markiere range 5			
			goto fzdSlRRR
*DSSRRmarkR6		mark 3							; markiere range 6
*DSSRRmarkR4		mark 4							; markiere range 4
			goto
*DSSRRmarkR13		mark 4							; markiere range 13
*DSSRRmarkR9		mark 5							; markiere range 9
			mark 2				 
			goto fzdSlRRR
*DSSRRmarkR11		mark 2							; markiere range 11
*DSSRRmarkR10		mark 5							; markiere range 10
*DSSRRmarkR2		mark 3							; markiere range 2
			goto fzdSlRRR				
*DSSRRmarkR15		mark 2							; markiere range 15
*DSSRRmarkR14		mark 3							; markiere range 14
*DSSRRmarkR12		mark 4							; markiere range 12
*DSSRRmarkR8		mark 5							; markiere range 8	
*fzdSlRRR		sense 6							; leaving DeepSeaLongLeft
			ifall !sense_marker2 !sense_marker3 !sense_marker4 !sense_marker5 else fastChoiceLL			
			if ship_direction>2 else RRLT3				; dir!=4,5,denn diese Faelle existieren nur in DeepSeaShort
			mark 0
			goto RRrightEQ4
*RRLT3			if ship_direction<2 else RREQ2
			if ship_direction<1 else RREQ1
			mark 3
			goto doubleLong
*RREQ1			mark 4
			goto doubleLong
*RREQ2			mark 5
			goto doublelong
*fastChoiceLL		if ship_direction<3 else RRrightEQ4
			goto doubleLong
*RRrightEQ4		goto deepSeaShortRight
*doubleLong		goto deepSeaLongRight
*pickL0RRR		pickup 0 else fzdSlRRR
			goto return0
*pickL1RRR		pickup 0 else DSSRRmarkR1
			goto turn1
*pickL2RRR		pickup 0 else DSSRRmarkR2
			goto turn2
*pickL3RRR		pickup 0 else DSSRRmarkR3
			goto turn3
*pickL4RRR		pickup 0 else DSSRRmarkR4
			goto turn4
*pickL5RRR		pickup 0 else DSSRRmarkR5
			goto turn5
*pickL6RRR		pickup 0 else DSSRRmarkR6
			goto turn6
*pickL7RRR		pickup 0 else DSSRRmarkR7
			goto turn7
*pickL8RRR		pickup 0 else DSSRRmarkR8
			goto turn8
*pickL9RRR		refresh 0 else prRRR1
*prRRR1			pickup 0 else DSSRRmarkR9
			goto turn9
*pickL10RRR		refresh 0 else prRRR2  		
*prRRR2			pickup 0 else DSSRRmarkR10
			goto turn10
*pickL11RRR		refresh 0 else prRRR3
*prRRR3			pickup 0 else DSSRRmarkR11
			goto turn11
*pickL12RRR		pickup 0 else DSSRRmarkR12
			goto turn12
*pickL13RRR		pickup 0 else DSSRRmarkR13
			goto turn13
*pickL14RRR		pickup 0 else DSSRRmarkR14
			goto turn14
*pickL15RRR		pickup 0 else s445RRR
			goto turn15
*deepSeaLongRight	if ship_condition!=1 else return 0 			; begin deepSeaLongRight
			turn right
			move else pickL0LLL					; move 1 else still 0
			pickup 1 else s31LLL
			goto return0
*s31LLL			pickup 5 else deepSeaLongRightInit
			goto return0
*deepSeaLongRightInit	move else pickL1LLL					; move 2 else still 1
			pickup 1 else s32LLL					; goto sense deepsea short ahead 4(s42A)
			goto turn1
*s32LLL			pickup 5 else m3dSlLLL					; goto move deepsea short ahead 3(m3dSsA)
			goto turn1
*m3dSlLLL		move else pickL2LLL					; move 3 else still 2
			pickup 1 else s33LLL					; wenn man schonmal da ist, kann man auch gleich
			goto turn2						; rechts und links nach schaetzen schauen
*s33LLL			pickup 5 else m4dSlLLL
			goto turn2
*m4dSlLLL		move else pickL3LLL					; move 4 else still 3
			pickup 1 else s34LLL
			goto turn3
*s34LLL			pickup 5 else m5dSlLLL
			goto turn3
*m5dSlLLL		move else pickL4LLL					; move 5 else still 4
			pickup 1 else s35LLL
			goto turn4
*s35LLL			pickup 5 else m6dSlLLL
			goto turn4
*m6dSlLLL		move else pickL5LLL					; move 6 else still 5
			pickup 1 else s36LLL
			goto turn5
*s36LLL			pickup 5 else m7dSlLLL
			goto turn5
*m7dSlLLL		move else pickL6LLL					; move 7 else still 6
			pickup 1 else s37LLL
			goto turn6
*s37LLL			pickup 5 else m8dSlLLL
			goto turn6
*m8dSlLLL		move else pickL7LLL					; move 8 else still 7
			pickup 1 else s38LLL
			goto turn7
*s38LLL			pickup 5 else m9dSlLLL
			goto turn7
*m9dSlLLL		move else pickL8LLL					; move 9 else still 8
			pickup 1 else s39LLL
			goto turn8
*s39LLL			pickup 5 else m10dSlLLL
			goto turn8
*m10dSlLLL		move else pickL9LLL					; move 10 else still 9
			pickup 1 else s40LLL
			goto turn9
*s40LLL			pickup 5 else *m11dSlLLL
			goto turn9
*m11dSlLLL		move else pickL10LLL					; move 11 else still 10
			pickup 1 else s41LLL
			goto turn10
*s41LLL			pickup 5 else *m12dSlLLL
			goto turn10
*m12dSlLLL		move else pickL11LLL					; move 12 else still 11
			pickup 1 else s42LLL
			goto turn11
*s42LLL			pickup 5 else m13dSlLLL
			goto turn11
*m13dSlLLL		move else pickL12LLL					; move 13 else still 12
			pickup 1 else s43LLL
			goto turn12
*s43LLL			pickup 5 else m14dSlLLL
			goto turn12
*m14dSlLLL		move else pickL13LLL					; move 14 else still 13
			pickup 1 else s44LLL
			goto turn13
*s44LLL			pickup 5 else m15dSlLLL
			goto turn13
*m15dSlLLL		move else pickL14LLL 					; move 15 else still 14
			goto pickL15LLL			
*s445LLL		pickup 1 else s45LLL
			goto turn14
*s45LLL			pickup 5 else DSSLmarkR15
			goto turn14
*DSSLmarkR7		mark 4							; markiere range 7
*DSSLmarkR3		mark 3							; markiere range 3
*DSSLmarkR1		mark 2							; markiere range 1
			goto fzdSlLLL 								
*DSSLmarkR5		mark 4
			mark 2							; markiere range 5			
			goto fzdSlLLL
*DSSLmarkR6		mark 3							; markiere range 6
*DSSLmarkR4		mark 4							; markiere range 4
			goto
*DSSLmarkR13		mark 4							; markiere range 13
*DSSLmarkR9		mark 5							; markiere range 9
			mark 2				 
			goto fzdSlLLL
*DSSLmarkR11		mark 2							; markiere range 11
*DSSLmarkR10		mark 5							; markiere range 10
*DSSLmarkR2		mark 3							; markiere range 2
			goto fzdSlLLL				
*DSSLmarkR15		mark 2							; markiere range 15
*DSSLmarkR14		mark 3							; markiere range 14
*DSSLmarkR12		mark 4							; markiere range 12
*DSSLmarkR8		mark 5							; markiere range 8	
*fzdSlLLL		sense 6							; leaving DeepSeaLongRight
			ifall !sense_marker2 !sense_marker3 !sense_marker4 !sense_marker5 else fastChoiceRR
			if ship_direction>2 else LLLT3
			mark 0
			goto doubleLong
*LLLT3			if ship_direction<2 else LLEQ2
			if ship_direction<1 else LLEQ1
			mark 3							; dir==0
			goto LLleftEQ5
*LLEQ1			mark 4
			goto doubleLongR
*LLEQ2			mark 5
			goto doublelongR
*fastChoiceRR		if ship_direction!=0 else LLleftEQ5
			goto doubleLongR
*LLleftEQ5		goto deepSeaShortLeft
*doubleLongR		goto deepSeaLongLeft
*pickL0LLL		pickup 0 else fzdSlLLL
			goto return0
*pickL1LLL		pickup 0 else DSSLmarkR1
			goto turn1
*pickL2LLL		pickup 0 else DSSLmarkR2
			goto turn2
*pickL3LLL		pickup 0 else DSSLmarkR3
			goto turn3
*pickL4LLL		pickup 0 else DSSLmarkR4
			goto turn4
*pickL5LLL		pickup 0 else DSSLmarkR5
			goto turn5
*pickL6LLL		pickup 0 else DSSLmarkR6
			goto turn6
*pickL7LLL		pickup 0 else DSSLmarkR7
			goto turn7
*pickL8LLL		pickup 0 else DSSLmarkR8
			goto turn8
*pickL9LLL		pickup 0 else DSSLmarkR9
			goto turn9
*pickL10LLL  		pickup 0 else DSSLmarkR10
			goto turn10
*pickL11LLL		pickup 0 else DSSLmarkR11
			goto turn11
*pickL12LLL		pickup 0 else DSSLmarkR12
			goto turn12
*pickL13LLL		pickup 0 else DSSLmarkR13
			goto turn13
*pickL14LLL		pickup 0 else DSSLmarkR14
			goto turn14
*pickL15LLL		pickup 0 else s445LLL
			goto turn15		
*shortRangeInit					
*shortRange
*turn1			turn right				; dreht schiffe um 180* vor dem weg nach hause
			turn right
			turn right
			goto return1
*turn2			turn left
			turn left
			turn left
			goto return2
*turn3			turn right
			turn right
			turn right 
			goto return3
*turn4			turn left 
			turn left
			turn left
			goto return4
*turn5			turn right
			turn right
			turn right
			goto return5
*turn6			turn left
			turn left
			turn left 
			goto return6
*turn7			turn right 
			turn right
			turn right
			goto return7
*turn8			turn left 
			turn left
			turn left 
			goto return8
*turn9			turn right
			turn right
			turn right
			goto return9
*turn10			turn left
			turn left
			turn left
			goto return10
*turn11			turn right
			turn right
			turn right
			goto return11
*turn12			turn left
			turn left
			turn left
			goto return12
*turn13			turn right
			turn right
			turn right
			goto return13
*turn14			turn left 
			turn left
			turn left
			goto return14
*turn15			turn right
			turn right
			turn right
*return15		move else friendorfoe15				; hier beginnt die return home routine
*return14		move else friendorfoe14
*return13		move else friendorfoe13
*return12		move else friendorfoe12
*return11		move else friendorfoe11
*return10		move else friendorfoe10
*return9		move else friendorfor9
*return8		move else friendorfoe8
*return7		move else friendorfoe7
*return6		move else friendorfoe6
*return5		move else friendorfoe5
*return4		move else friendorfoe4
*return3		move else friendorfoe3
*return2		move else friendorfoe2
*return1		move else friendorfoe1
*return0		sense6
			if cell_type==home else scan
			drop
			if ship_condition<3 else init
			repair else init
			goto init
*scan			if sense_marker0 else notNull		 
			if !sense_marker1 else markEQ3		; marks dir == 1 else dir == 3
			goto markEQ1
*notNull		if sense_marker1  else notOne		; marks dir == 2 else jump to check if marker2
			goto markEQ2
*notOne			if !sense_marker2 else markEQ5
			goto markEQ4 
*markEQ5		if ship_direction<2 else m5dirGT2		; jump to getShort //min 5, max 6 Zuege//20 Instructions
			if ship_direction<1 else m5dirEQ1		; dir == 0 
			turn left
			goto getShort
*m5dirEQ1		turn left
			turn left 
			goto getShort
*m5dirGT2		if ship_direction>2 else m5dirEQ2
			if ship_direction>3 else m5dirEQ3
			if ship_direction>4 else m5dirEQ4
			got getShort					; dir == 5
*m5dirEQ2		turn right
			turn right
			turn right
			goto getShort
*m5dirEQ3		turn right
			turn right
			goto getShort
*m5dirEQ4		turn right	
			goto getShort
*markEQ1		if ship_direction<2 else m1dirGT2		; jump to getLong //min 5, max 6 Zuege//20 Instructions
			if ship_direction<1 else m1dirEQ1
			turn right					; dir == 0
			goto getLong
*m1dirEQ1		goto getLong
*m1dirGT2		if ship_direction>2 else m1dirEQ2
			if ship_direction>3 else m1dirEQ3
			if ship_direction>4 else m1dirEQ4
			turn right
			turn right
			goto getLong
*m1dirEQ2		turn left
			goto getLong
*m1dirEQ3		turn left 
			turn left
			goto getLong
*m1dirEQ4 		turn left
			turn left
			turn left
			goto getLong
*markEQ2		if ship_direction<2 else m2dirGT2		; jump to getLong //min 5, max 6 Zuege//20 Instructions
			if ship_direction<1 else m2dirEQ1
			turn right
			turn right
			goto getLong
*m2dirEQ1		goto turn right
			goto getLong
*m2dirGT2 		if ship_direction>2 else m2dirEQ2
			if ship_direction>3 else m2dirEQ3
			if ship_direction>4 else m2dirEQ4
			turn left
			turn left
			turn left
			goto getLong
*m2dirEQ2		goto getLong
*m2dirEQ3		turn left
			goto getLong
*m2dirEQ4		turn left
			turn left
			goto getLong
*markEQ3		if sense_direction<2 else m3dirGT2		; jump to getLong //min 5, max 6 Zuege//20 Instructions
			if sense_direction<1 else m3dirEQ1
			turn right
			turn right
			turn rigt
			goto getLong
*m3dirEQ1		turn right
			turn right
			goto getLong
*m3dirGT2		if ship_direction>2 else m2dirEQ2
			if ship_direction>3 else m2dirEQ3
			if ship_direction>4 else m2dirEQ4
			turn left 
			turn left
			goto getLong
*m3dirEQ2		turn right
			goto getLong
*m3dirEQ3		goto getLong
*m3dirEQ4		turn left
			goto getLong
*markEQ4		if ship_direction<2 else m4dirGT2		; jump to getShort//min 5, max 6 Zuege//20 Instructions
			if ship_direction<1 else m4dirEQ1
			turn left
			turn left
			goto getShort
*m4dirEQ1		turn left
			turn left
			turn left
			goto getShort
*m4dirGT2		if ship_direction>2 else m4dirEQ2
			if ship_direction>3 else m4dirEQ3
			if ship_direction>4 else m4dirEQ4
			turn left
			goto getShort
*m4dirEQ2		turn right
			turn right
			goto getShort
*m4dirEQ3		turn right 
			goto getShort
*m4dirEQ4		goto getShort
*getShort		if sense_marker3 else notThree		; getShort: mindestens 3 Zuege, maximal 4  	//10 Instructions
			if sense_marker4 else andNotFour
			if !sense_marker5 else return7
			goto return3
*andNotFour		if !sense_marker5 else return5 
			goto return1
*notThree		if sense_marker4 else norFour
			if !sense_marker5 else return6
			goto return2
*norFour		goto return4
*getLong		if sense_marker5  else notFive		; getLong: mindestens 4 Zuege, maximal 5	//22Instructions
			if sense_marker4  else butNotFour	 
			if sense_marker3  else butNotThree	
			if !sense_marker2 else return15		 
			goto return14				 
*notFive		if sense_marker4 else norFour		 
			if sense_marker3 else neitherThree
			if !sense_marker2 else return7
			goto return6
*norFour		if sense_marker3 else norThree
			if !sense_marker2 else return3
			goto return2
*norThree		goto return1
*neitherThree 		if !sense_marker2 else return5
			goto return4
*butNotFour		if sense_marker3 else andNotThree
			if !sense_marker2 else return11
			goto return10
*andNotThree		if !sense_marker2 else return9
			goto return8
*butNotThree		if !sense_marker2 else return13
			goto return12	
*friendorfoe1 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return1
			goto friendorfoe 
*friendorfoe2 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return2
			goto friendorfoe 
*friendorfoe3		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return3
			goto friendorfoe  
*friendorfoe4 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return4
			goto friendorfoe 
*friendorfoe5 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return5
			goto friendorfoe  
*friendorfoe6 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return6
			goto friendorfoe 
*friendorfoe7 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return7
			goto friendorfoe  
*friendorfoe8 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return8
			goto friendorfoe  
*friendorfoe9 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return9
			goto friendorfoe  
*friendorfoe10 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return10
			goto friendorfoe  
*friendorfoe11 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return11
			goto friendorfoe 
*friendorfoe12 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return12
			goto friendorfoe  
*friendorfoe13 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return13
			goto friendorfoe  
*friendorfoe14 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return14
			goto friendorfoe  
*friendorfoe15 		sense 0 
	 		ifany sense_shiptype==enemy sense_shiptype==friend else return15
			goto friendorfoe  

