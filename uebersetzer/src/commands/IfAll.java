package src.commands;

import java.util.List;

import src.main.Command;
import src.main.Comparison;
/**
 * The <code>IfAll</code> class:
 * 
 * This class implements the interface <code>Command</code>. Instances of this class are generated by the <code>Translator</code> class.
 * They are part of the Java-representation of a tactics file. An instance of the <code>IfAll</code> class represents an occurrence of
 * an ifall command in the tactics file. <code>IfAll</code> commands contain a List of <code>Comparison</code>s describing the condition and an int to which the program counter
 * is set in the alternative case.
 * @author Jan
 *
 */
public class IfAll implements Command {

	private List<Comparison> clauses;
	private int elsePC;
	/**
	 * The constructor of the <code>IfAll</code> class. 
	 * Sets the attributes. clauses is set to clauses and elsePC is set to pc.
	 * @param clauses The list of <code>Comparison</code>s which specify the condition.
	 * @param pc The value the program counter is set to on the alternative case.
	 * @exception IllegalArgumentException
	 * 				If the value of pc is not between 0 and 1999. Also thrown if clauses is null or if the size of clauses is 0.
	 */
	public IfAll(List<Comparison> clauses, int pc){
		if(pc<0 || pc> 1999)
		{
			throw new IllegalArgumentException("PC cannot be set to " + pc);
		}
		if(clauses == null || clauses.size() == 0)
			throw new IllegalArgumentException("IfAll needs at least one comparison to work.");
		this.clauses = clauses;
		this.elsePC = pc;
	}
	/**
	 * * Executes this <code>IfAll</code> command. If the evaluation of all the comparisons gives true as a result nothing is done since the PC has already been incremented by the act method in <code>Ship</code>.
	 * If the evaluation at least one comparison gives false as a result the ship's program counter is set to elsePC.
	 * @param ship The ship in which this command was called.
	 */
	
	@Override
	public String toString(){
		String res = "ifall ";
		for (Comparison clause: clauses)
			res = res + clause.toString() + " ";
		return res + " else " + String.valueOf(elsePC);
	}
	@Override
	public boolean equals(Object o){
		if(o instanceof IfAll){
			IfAll other = (IfAll) o;
			if(other.clauses == clauses && other.elsePC == elsePC)
				return true;
		}
		return false;	
	}
}
