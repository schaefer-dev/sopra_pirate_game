*start flipzero 2 else drehrechts; 									Hälfte dreht sich nach links, andere nach rechts
*drehlinks turn left; 												Drehung in Richtung 5
flipzero 2 else drehweiterLinks; 									Hälfte dreht sich weiter, andere Hälfte nicht
*start5 pickup 5 else look5rechtsStart; 							Gucken ob links vorne Schatz ist, sonst rechts gucken
drop; 																Schatz abgeben
goto start5; 														wieder starten
*look5rechtsStart pickup 1 else look5geradeausStart; 				gucken ob rechts schatz ist, sonst vorne gucken
drop; 																Schatz abgeben
goto start5; 														wieder starten
*look5geradeausStart sense 0; 										Vorne sensen
ifall !sense_treasure sense_celltype!=island else testWhatStart; 	Wenn kein Schatz oder Insel vorne, losfahren, sonst nachgucken was es ist
*normal5 move else turnlinks5; 										Nach vorne Bewegen, wenn's nicht geht nach links drehen.
mark 2; 															Boje setzten, dass in Richhtung 2 die Basis ist.
*test5 pickup 5 else look5rechts; 									linksvorne nach Schatz gucken, wenn keiner da rechts gucken
goto findback; 														Da Schatz gefunden nach Hause zurückfahren
*look5rechts pickup 1 else look5geradeaus; 							rechtsvorne nach Schatz gucken, wenn keiner da geradeaus gucken.
goto findback; 														Da Schatz gefunden nach Hause zurückfahren
*look5geradeaus sense 0; 											nach vorne sensen
ifany sense_treasure sense_celltype==island else normal5; 			Wenn vorne kein Schatz oder Insel weiterfahren, sonst
*pickupGeradeaus5 pickup 0 else inselavoid5; 						Vorne nach Schatz suchen, wenn keiner da drehen, da Insel im Weg, sonst zurückfahren.
goto findback; 														Nach Hause fahren, da Schatz gefunden
*inselavoid5 flipzero 2 else turnrechts5;							Um nicht auf Insel zu fahren entweder links oder rechts abbiegen.
*turnlinks5 turn left;												links abbiegen
goto test4;															Auf Schätz oder Inseln Testen in neue Fahrtrichtung
*turnrechts5 turn right;											rechts abbiegen
goto test0;															Auf Schätz oder Inseln Testen in neue Fahrtrichtung
*drehweiterLinks turn left;											Noch weiter nach links drehen in Richtung 4
flipzero 2 else drehnochweiterLinks;								So bleiben oder volle 180° Drehung
*start4 pickup 5 else look4rechtsStart;								Gucken ob links vorne Schatz ist, sonst rechts gucken
drop;																Schatz abgeben
goto start4;														Wieder anfangen zu suchen
*look4rechtsStart pickup 1 else look4geradeausStart;				gucken ob rechts schatz ist, sonst vorne gucken
drop;																Schatz abgeben
goto start4;														Wieder anfangen zu suchen
*look4geradeausStart sense 0;										Vorne sensen
ifall !sense_treasure sense_celltype!=island else testWhatStart;	Wenn kein Schatz oder Insel vorne, losfahren, sonst nachgucken was es ist
*normal4 move else turnrechts4;										Nach vorne Bewegen, wenn's nicht geht nach links drehen.
mark 1;																Boje setzten, dass in Richhtung 1 die Basis ist.
*test4 pickup 5 else look4rechts;									linksvorne nach Schatz gucken, wenn keiner da rechts gucken
goto findback;														Da Schatz gefunden nach Hause zurückfahren
*look4rechts pickup 1 else look4geradeaus;							rechtsvorne nach Schatz gucken, wenn keiner da geradeaus gucken.
goto findback;														Da Schatz gefunden nach Hause zurückfahren
*look4geradeaus sense 0;											nach vorne sensen
ifany sense_treasure sense_celltype==island else normal4;			Wenn vorne kein Schatz oder Insel weiterfahren, sonst
*pickupGeradeaus4 pickup 0 else avoidIsland4;						Vorne nach Schatz suchen, wenn keiner da drehen, da Insel im Weg, sonst zurückfahren.
goto findback;														Da Schatz gefunden nach Hause zurückfahren
*avoidIsland4 flipzero 2 else turnrechts4;							Um nicht auf Insel zu fahren entweder links oder rechts abbiegen.
*turnlinks4 turn left;												Links abbiegen
goto test3;															Auf Schätz oder Inseln testen in neue Fahrtrichtung
*turnrechts4 turn right;											rechts abbiegen
goto test5;															Auf Schätz oder Inseln Testen in neue Fahrtrichtung
*drehnochweiterLinks turn left;										In Richtung 3 drehen.
*start3 pickup 5 else look3rechtsStart;								Gucken ob links vorne Schatz ist, sonst rechts gucken
drop;																Schatz abgeben
goto start3;														Schatzsuche erneut starten
*look3rechtsStart pickup 1 else look3geradeausStart;                gucken ob rechts schatz ist, sonst vorne gucken
drop;																Schatz abgeben
goto start3;														Schatzsuche erneut starten
*look3geradeausStart sense 0;										Vorne sensen
ifall !sense_treasure sense_celltype!=island else testWhatStart;	Wenn kein Schatz oder Insel vorne, losfahren, sonst nachgucken was es ist
*normal3 move else turnlinks3;										Nach vorne Bewegen, wenn's nicht geht nach links drehen.
mark 0;																Boje setzten, dass in Richhtung 1 die Basis ist.
*test3 pickup 5 else look3rechts;									linksvorne nach Schatz gucken, wenn keiner da rechts gucken
goto findback;														Da Schatz gefunden nach Hause zurückfahren.
*look3rechts pickup 1 else look3geradeaus;							rechtsvorne nach Schatz gucken, wenn keiner da geradeaus gucken.
goto findback;														Da Schatz gefunden nach Hause zurückfahren.
*look3geradeaus sense 0;											nach vorne sensen
ifany sense_treasure sense_celltype==island else normal3;			Wenn vorne kein Schatz oder Insel weiterfahren, sonst
*pickupGeradeaus3 pickup 0 else avoidIsland3;						Vorne nach Schatz suchen, wenn keiner da drehen, da Insel im Weg, sonst zurückfahren.
goto findback;														Da Schatz gefunden nach Hause zurückfahren.
*avoidIsland3 flipzero 2 else turnrechts3;							Um nicht auf Insel zu fahren entweder links oder rechts abbiegen.
*turnlinks3 turn left;												Links abbiegen
goto test2;															Auf Schätz oder Inseln testen in neue Fahrtrichtung
*turnrechts3 turn right;											Rechts abbiegen
goto test4;															Auf Schätz oder Inseln testen in neue Fahrtrichtung
*drehrechts turn right;												Drehung in Richtung 1
flipzero 2 else drehweiterRechts
*start1 pickup 5 else look1rechtsStart
drop
goto start1
*look1rechtsStart pickup 1 else look1geradeausStart
drop
goto start1
*look1geradeausStart sense 0
ifall !sense_treasure sense_celltype!=island else testWhatStart
*normal1 move else turnrechts1
mark 4
*test1 pickup 5 else look1rechts
goto findback
*look1rechts pickup 1 else look1geradeaus
goto findback
*look1geradeaus sense 0
ifany sense_treasure sense_celltype==island else normal1
*pickupGeradeaus1 pickup 0 else avoidIsland1
goto findback
*avoidIsland1 flipzero 2 else turnrechts1
*turnlinks1 turn left
goto test0
*turnrechts1 turn right
goto test2
*drehweiterRechts turn right
flipzero 2 else drehnochweiterRechts
*start2 pickup 5 else look2rechtsStart
drop
goto start2
*look2rechtsStart pickup 1 else look2geradeausStart
drop
goto start2
*look2geradeausStart sense 0
ifall !sense_treasure sense_celltype!=island else testWhatStart
*normal2 move else turnlinks2
mark 5
*test2 pickup 5 else look2rechts
goto findback
*look2rechts pickup 1 else look2geradeaus
goto findback
*look2geradeaus sense 0
ifany sense_treasure sense_celltype==island else normal2
*pickupGeradeaus2 pickup 0 else avoidIsland2
goto findback
*avoidIsland2 flipzero 2 else turnrechts2
*turnlinks2 turn left
goto test1
*turnrechts2 turn right
goto test3
*drehnochweiterRechts turn right
goto start3
*start0 pickup 5 else look0rechtsStart
drop
goto start0
*look0rechtsStart pickup 1 else look0geradeausStart
drop
goto start0
*look0geradeausStart sense 0
ifall !sense_treasure sense_celltype!=island else testWhatStart
*normal0 move else turnrechts0
mark 3
*test0 pickup 5 else look0rechts
goto findback
*look0rechts pickup 1 else look0geradeaus
goto findback
*look0geradeaus sense 0
ifany sense_treasure sense_celltype==island else normal0
*pickupGeradeaus0 pickup 0 else avoidIsland0
goto findback
*avoidIsland0 flipzero 2 else turnrechts0
*turnlinks0 turn left
goto test5
*turnrechts0 turn right
goto test1
*testWhatStart pickup 0 else drehTo0Start
drop
goto drehTo0Start
*drehTo0Start if ship_direction==0 else turnLeftGoto0
goto start0
*turnLeftGoto0 turn left
goto drehTo0Start
goto start
*findback sense 6
if sense_celltype==home else findpath
drop
if ship_condition!=3 else drehTo0Start
repair else drehTo0Start
goto drehTo0Start
*findpath if !sense_marker0 else drehTo0
if !sense_marker1 else drehTo1
if !sense_marker2 else drehTo2
if !sense_marker3 else drehTo3
if !sense_marker4 else drehTo4
*drehTo5 if ship_direction==5 else turnTo5
move else findback
goto findback5
*turnTo5 turn right
goto drehTo5
*drehTo4 if ship_direction==4 else turnTo4
move else findback
goto findback4
*turnTo4 turn right
goto drehTo4
*drehTo3 if ship_direction==3 else turnTo3
move else findback
goto findback3
*turnTo3 turn right
goto drehTo3
*drehTo2 if ship_direction==2 else turnTo2
move else findback
goto findback2
*turnTo2 turn right
goto drehTo2
*drehTo1 if ship_direction==1 else turnTo1
move else findback
goto findback1
*turnTo1 turn right
goto drehTo1
*drehTo0 if ship_direction==0 else turnTo0
move else findback
goto findback0
*turnTo0 turn right
goto drehTo0
*findback0 sense 6
if sense_celltype==home else findpath0
drop
if ship_condition!=3 else drehTo0Start
repair else drehTo0Start
*findpath0 ifall ship_direction==0 sense_marker0 else findpath
move else findback
goto findback0
*findback1 sense 6
if sense_celltype==home else findpath1
drop
if ship_condition!=3 else drehTo0Start
repair else drehTo0Start
*findpath1 ifall ship_direction==1 sense_marker1 else findpath
move else findback
goto findback1
*findback2 sense 6
if sense_celltype==home else findpath2
drop
if ship_condition!=3 else drehTo0Start
repair else drehTo0Start
*findpath2 ifall ship_direction==2 sense_marker2 else findpath
move else findback
goto findback2
*findback3 sense 6
if sense_celltype==home else findpath3
drop
if ship_condition!=3 else drehTo0Start
repair else drehTo0Start
*findpath3 ifall ship_direction==3 sense_marker3 else findpath
move else findback
goto findback3
*findback4 sense 6
if sense_celltype==home else findpath4
drop
if ship_condition!=3 else drehTo0Start
repair else drehTo0Start
*findpath4 ifall ship_direction==4 sense_marker4 else findpath
move else findback
goto findback4
*findback5 sense 6
if sense_celltype==home else findpath5
drop
if ship_condition!=3 else drehTo0Start
repair else drehTo0Start
*findpath5 ifall ship_direction==5 sense_marker5 else findpath
move else findback
goto findback5