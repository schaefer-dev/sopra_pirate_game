<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<short range taktik. >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><

bojen werden abgeworfen und gesenst, die information aber erst spater abgerufen. Die senseregister sind gedachtnisstuetzen
		sense 6
		ifall !sense_marker0 !sense_marker1 !sense_marker2 !sense_marker3 !sense_marker4 !sense_marker5 else getDir
		if sense_marker0 else check1
		unmark 0
*check1		if sense_marker1 else check2
		unmark 1
*check2		if sense_marker2 else check3
		unmark 2
*check3		if sense_marker3 else check4
		unmark 3
*check4		if sense_marker4 else check5
		unmark 4
*check5		if sense_marker5 else getDir
		unmark 5
*getDir		if ship_direction<5 else sdEQ5
		if ship_direction<4 else sdEQ4
		if ship_direction<3 else sdEQ3
		if ship_direction<2 else sdEQ2
		if ship_direction<4 else sdEQ1
		mark 5
		sense 6
		unmark 5
		goto proceed
*sdEQ5		mark 2
		sense 6
		unmark 2
		goto proceed
*sdEQ4		goto proceed
*sdEQ3		mark 0
		mark 1
		sense 6
		unmark 0
		unmark 1
		goto proceed
*sdEQ2		mark 1
		sense 6
		unmark1
		goto proceed
*sdEQ1		mark 0
		sense 6
		unmark 0
		goto proceed
*proceed	flipzero 2 else otherDir			; das schiff hat die Richtung gespeichert, aus der es kam
		turn left
		goto moveon0
*otherdir	turn right					; und fährt jetzt in eine andere.
*moveon0	move else pickshort1
		pickup 2 else moveon1				; es reicht voellig, wenn es nach vorne und rechts hinten sucht, 										weil es dreiecke fahren wird, und dann einige felder mehrfach 										absuchen wuerde.		
		goto goHome
*moveon1	move else pickshort2
		pickup 2 else moveon2		
		move else pickshort3
		move else pickshort4
		move else pickshort5
		move else pickshort6
		move else pickshort7
		move else pickshort8

<<<<<<<<<<<<<<<<<<<<<<<<<<<<</////////Denk dran, das schiff hat sich nach rechts oder nach links bewegt, es müssen als o nicht alle fälle abgefangen werden, sondern nur die nach links oder rechts./////>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

*goHome		ifall sense_marker5 !sense_marker2 !sense_marker1 !sense_marker0 else continue ; dir==0
		goto srDirEQ0
*continue	if sense_marker2 else srDirGT0NEQ5		; dir==5
		goto srDirEQ5
*srDirGT0NEQ5	if sense_marker0 else dirNotNull
		if sense_marker1 else dirNotOne
		goto srDirEQ3					; dir==3
*dirNotOne	goto srDirEQ1					; dir==1								
*dirNotNull     if sense_marker1 else neither			
		goto srDirEQ2					; dir==2
*neither							; dir==4
*srDirEQ0       if ship_direction>3				; fate: turn left
		if ship_direction<3 else actualdirEQ3		; fate: turn right
*actualdirEQ3							; fate: blubb					
*srDirEQ1	ifany ship_direction==5 ship_direction==0	; fate: turn left
		ifany ship_direction==2 ship_direction==3       ; fate: turn right
*srDirEQ2
*srDirEQ3
*srDirEQ5


		sense 6
		ifany sense_marker0 sense_marker2 sense_marker3 sense_marker4 sense_marker5 else goon
		goto ;Problematisch, die markierungen der longe range shiffe haben natürlich priorität. wenn bojen liegen, wird die ganze 				prozedur erheblich zeitaufwendiger. Aber ist hoffentlich eh ein grenzfall. 
*pickshort	pickup 0 else markdistance(short algorithm)
